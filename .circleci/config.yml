version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    parallelism: 1 # setting parallel jobs to 1 to avoid paying for more containers
    working_directory: ~/hr_form # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/ruby:2.6.5-node # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          DATABASE_URL: postgres://hr_form-user@127.0.0.1/hr_form-test

      - image: circleci/postgres:11-alpine # database image
        environment: # environment variables for database
          POSTGRES_USER: hr_form-user
          POSTGRES_DB: hr_form-test
          POSTGRES_PASSWORD: ''
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - hr_form-{{ checksum "Gemfile.lock" }}
            - hr_form-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: hr_form-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - hr_form-yarn-{{ checksum "yarn.lock" }}
            - hr_form-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: hr_form-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # create and migrate db
      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      # seed db
      - run:
          name: Database seeding with dev seeds
          command: bin/rails db:seed RAILS_ENV=development

      # seed db for production
      - run:
          name: Database seeding with production seeds
          command: bin/rails db:seed RAILS_ENV=production
          environment:
            SECRET_KEY_BASE: stub

      - run:
          name: Rspec
          command: bundle exec rspec

      # Save test results for timing analysis
      - store_test_results:
          path: test_results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for example deploy configs
